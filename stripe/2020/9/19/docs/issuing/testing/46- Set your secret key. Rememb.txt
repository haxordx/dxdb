// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.Key = "sk_test_4eC39HqLyjWDarjtT1zdp7dc"

params := &stripe.PaymentIntentParams{
  PaymentMethod: stripe.String("pm_1Guknr2eZvKYlo2COUU0HvEF"),
  Amount: stripe.Int64(2000),
  Currency: stripe.String(string(stripe.CurrencyUSD)),
  PaymentMethodTypes: stripe.StringSlice([]string{
    "card",
  }),
  CaptureMethod: stripe.String(string(stripe.PaymentIntentCaptureMethodManual)),
  SetupFutureUsage: stripe.String(string(stripe.PaymentIntentSetupFutureUsageOffSession)),
  Customer: stripe.String("cus_1Cm3pZIyNTgGDVfzI83rasFP"),
  Confirm: stripe.Bool(true),
}
intent, err := paymentintent.New(params)
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.Key = "sk_test_4eC39HqLyjWDarjtT1zdp7dc"

params := &stripe.PaymentIntentParams{
  PaymentMethod: stripe.String("pm_1Guknr2eZvKYlo2COUU0HvEF"),
  Amount: stripe.Int64(2000),
  Currency: stripe.String(string(stripe.CurrencyUSD)),
  PaymentMethodTypes: stripe.StringSlice([]string{
    "card",
  }),
  CaptureMethod: stripe.String(string(stripe.PaymentIntentCaptureMethodManual)),
  SetupFutureUsage: stripe.String(string(stripe.PaymentIntentSetupFutureUsageOffSession)),
  Customer: stripe.String("cus_1Cm3pZIyNTgGDVfzI83rasFP"),
  Confirm: stripe.Bool(true),
}
intent, err := paymentintent.New(params)
