params := &stripe.CheckoutSessionParams{
  PaymentMethodTypes: stripe.StringSlice([]string{
    "card",
  }),
  LineItems: []*stripe.CheckoutSessionLineItemParams{
    &stripe.CheckoutSessionLineItemParams{
      PriceData: &stripe.CheckoutSessionLineItemPriceDataParams{
        Product: stripe.String("{{PRODUCT_ID}}"),
        UnitAmount: stripe.Int64(1500),
        Currency: stripe.String(string(stripe.CurrencyUSD)),
      },
      Quantity: stripe.Int64(1),
    },
  },
  Mode: stripe.String("payment"),
  SuccessURL: stripe.String("https://example.com/success"),
  CancelURL: stripe.String("https://example.com/cancel"),
}

s, _ := session.New(params)params := &stripe.CheckoutSessionParams{
  PaymentMethodTypes: stripe.StringSlice([]string{
    "card",
  }),
  LineItems: []*stripe.CheckoutSessionLineItemParams{
    &stripe.CheckoutSessionLineItemParams{
      PriceData: &stripe.CheckoutSessionLineItemPriceDataParams{
        Product: stripe.String("{{PRODUCT_ID}}"),
        UnitAmount: stripe.Int64(1500),
        Currency: stripe.String(string(stripe.CurrencyUSD)),
      },
      Quantity: stripe.Int64(1),
    },
  },
  Mode: stripe.String("payment"),
  SuccessURL: stripe.String("https://example.com/success"),
  CancelURL: stripe.String("https://example.com/cancel"),
}

s, _ := session.New(params)