private Cancelable discoveryCancelable;

public void onDiscoverReaders() {
  DiscoveryConfiguration config = new DiscoveryConfiguration(0, DeviceType.CHIPPER_2X, false);
  // Save this cancelable to an instance variable
  discoveryCancelable = Terminal.getInstance().discoverReaders(config, readers -> {
    // Display the discovered readers to the user
  }, new Callback() {
    @Override
    public void onSuccess() {
      System.out.println("Finished discovering readers");
    }

    @Override
    public void onFailure(TerminalException e) {
      e.printStackTrace();
    }
  }
}

@Override
public void onStop() {
  // If you're leaving the activity or fragment without selecting a reader,
  // make sure you cancel the discovery process or the SDK will be stuck in
  // a discover readers phase
  if (discoveryCancelable != null) {
    discoveryCancelable.cancel(new Callback() {
      @Override
      public void onSuccess() { }

      @Override
      public void onFailure(TerminalException e) { }
    });
  }
}private Cancelable discoveryCancelable;

public void onDiscoverReaders() {
  DiscoveryConfiguration config = new DiscoveryConfiguration(0, DeviceType.CHIPPER_2X, false);
  // Save this cancelable to an instance variable
  discoveryCancelable = Terminal.getInstance().discoverReaders(config, readers -> {
    // Display the discovered readers to the user
  }, new Callback() {
    @Override
    public void onSuccess() {
      System.out.println("Finished discovering readers");
    }

    @Override
    public void onFailure(TerminalException e) {
      e.printStackTrace();
    }
  }
}

@Override
public void onStop() {
  // If you're leaving the activity or fragment without selecting a reader,
  // make sure you cancel the discovery process or the SDK will be stuck in
  // a discover readers phase
  if (discoveryCancelable != null) {
    discoveryCancelable.cancel(new Callback() {
      @Override
      public void onSuccess() { }

      @Override
      public void onFailure(TerminalException e) { }
    });
  }
}