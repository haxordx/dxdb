// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.Key = "sk_test_4eC39HqLyjWDarjtT1zdp7dc"

params := &stripe.CheckoutSessionParams{
    PaymentMethodTypes: stripe.StringSlice([]string{
        "card",
    }),
    LineItems: []*stripe.CheckoutSessionLineItemParams{
        &stripe.CheckoutSessionLineItemParams{
            Name: stripe.String("Stainless Steel Water Bottle"),
            Amount: stripe.Int64(1000),
            Currency: stripe.String(string(stripe.CurrencyUSD)),
            Quantity: stripe.Int64(1),
        },
    },
    PaymentIntentData: &stripe.CheckoutSessionPaymentIntentDataParams{
        ApplicationFeeAmount: stripe.Int64(123),
    },
    SuccessURL: stripe.String("https://example.com/success"),
    CancelURL: stripe.String("https://example.com/cancel"),
}

params.SetStripeAccount("{{CONNECTED_STRIPE_ACCOUNT_ID}}")
s, _ := session.New(params)
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.Key = "sk_test_4eC39HqLyjWDarjtT1zdp7dc"

params := &stripe.CheckoutSessionParams{
    PaymentMethodTypes: stripe.StringSlice([]string{
        "card",
    }),
    LineItems: []*stripe.CheckoutSessionLineItemParams{
        &stripe.CheckoutSessionLineItemParams{
            Name: stripe.String("Stainless Steel Water Bottle"),
            Amount: stripe.Int64(1000),
            Currency: stripe.String(string(stripe.CurrencyUSD)),
            Quantity: stripe.Int64(1),
        },
    },
    PaymentIntentData: &stripe.CheckoutSessionPaymentIntentDataParams{
        ApplicationFeeAmount: stripe.Int64(123),
    },
    SuccessURL: stripe.String("https://example.com/success"),
    CancelURL: stripe.String("https://example.com/cancel"),
}

params.SetStripeAccount("{{CONNECTED_STRIPE_ACCOUNT_ID}}")
s, _ := session.New(params)
