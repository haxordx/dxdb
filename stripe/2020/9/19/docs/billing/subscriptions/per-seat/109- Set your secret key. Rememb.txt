// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
const stripe = require('stripe')('sk_test_4eC39HqLyjWDarjtT1zdp7dc');

app.post('/update-subscription', async (req, res) => {
  const subscriptionId = req.body.subscriptionId;

  const subscription = await stripe.subscriptions.retrieve(subscriptionId);

  const current_price = subscription.items.data[0].price.id;
  const new_price = process.env[req.body.newPriceId.toUpperCase()];
  const quantity = req.body.quantity;
  var updatedSubscription;

  if (current_price == new_price) {
    updatedSubscription = await stripe.subscriptions.update(subscriptionId, {
      items: [
        {
          id: subscription.items.data[0].id,
          quantity: quantity,
        },
      ],
    });
  } else {
    updatedSubscription = await stripe.subscriptions.update(subscriptionId, {
      items: [
        {
          id: subscription.items.data[0].id,
          deleted: true,
        },
        {
          price: new_price,
          quantity: quantity,
        },
      ],
      expand: ['plan.product'],
    });
  }

  var invoice = await stripe.invoices.create({
    customer: subscription.customer,
    subscription: subscription.id,
    description:
      'Change to ' +
      quantity +
      ' seat(s) on the ' +
      updatedSubscription.plan.product.name +
      ' plan',
  });

  invoice = await stripe.invoices.pay(invoice.id);
  res.send(updatedSubscription);
});
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
const stripe = require('stripe')('sk_test_4eC39HqLyjWDarjtT1zdp7dc');

app.post('/update-subscription', async (req, res) => {
  const subscriptionId = req.body.subscriptionId;

  const subscription = await stripe.subscriptions.retrieve(subscriptionId);

  const current_price = subscription.items.data[0].price.id;
  const new_price = process.env[req.body.newPriceId.toUpperCase()];
  const quantity = req.body.quantity;
  var updatedSubscription;

  if (current_price == new_price) {
    updatedSubscription = await stripe.subscriptions.update(subscriptionId, {
      items: [
        {
          id: subscription.items.data[0].id,
          quantity: quantity,
        },
      ],
    });
  } else {
    updatedSubscription = await stripe.subscriptions.update(subscriptionId, {
      items: [
        {
          id: subscription.items.data[0].id,
          deleted: true,
        },
        {
          price: new_price,
          quantity: quantity,
        },
      ],
      expand: ['plan.product'],
    });
  }

  var invoice = await stripe.invoices.create({
    customer: subscription.customer,
    subscription: subscription.id,
    description:
      'Change to ' +
      quantity +
      ' seat(s) on the ' +
      updatedSubscription.plan.product.name +
      ' plan',
  });

  invoice = await stripe.invoices.pay(invoice.id);
  res.send(updatedSubscription);
});
