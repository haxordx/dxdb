// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
StripeConfiguration.ApiKey = "sk_test_4eC39HqLyjWDarjtT1zdp7dc";

[HttpPost("create-subscription")]
public ActionResult<Subscription> CreateSubscription([FromBody] CreateSubscriptionRequest req)
{
    // Attach payment method
    var options = new PaymentMethodAttachOptions
    {
        Customer = req.Customer,
    };
    var service = new PaymentMethodService();

    PaymentMethod paymentMethod;
    try
    {
        paymentMethod = service.Attach(req.PaymentMethod, options);
    }
    catch (Exception e)
    {
        return this.FailWithMessage($"Failed to attach payment method {e}");
    }

    // Update customer's default invoice payment method
    var customerOptions = new CustomerUpdateOptions
    {
        InvoiceSettings = new CustomerInvoiceSettingsOptions
        {
            DefaultPaymentMethod = paymentMethod.Id,
        },
    };
    var customerService = new CustomerService();
    try
    {
        customerService.Update(req.Customer, customerOptions);
    }
    catch (StripeException e)
    {
        return this.FailWithMessage($"Failed to attach payment method {e}");
    }

    // Create subscription
    var subscriptionOptions = new SubscriptionCreateOptions
    {
        Customer = req.Customer,
        Items = new List<SubscriptionItemOptions>
        {
            new SubscriptionItemOptions
            {
                Price = Environment.GetEnvironmentVariable(req.Price),
                Quantity = req.Quantity,
            },
        },
    };
    subscriptionOptions.AddExpand("latest_invoice.payment_intent");
    var subscriptionService = new SubscriptionService();
    try
    {
        return subscriptionService.Create(subscriptionOptions);
    }
    catch (StripeException e)
    {
        return this.FailWithMessage($"Failed to attach payment method: {e}");
    }
}
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
StripeConfiguration.ApiKey = "sk_test_4eC39HqLyjWDarjtT1zdp7dc";

[HttpPost("create-subscription")]
public ActionResult<Subscription> CreateSubscription([FromBody] CreateSubscriptionRequest req)
{
    // Attach payment method
    var options = new PaymentMethodAttachOptions
    {
        Customer = req.Customer,
    };
    var service = new PaymentMethodService();

    PaymentMethod paymentMethod;
    try
    {
        paymentMethod = service.Attach(req.PaymentMethod, options);
    }
    catch (Exception e)
    {
        return this.FailWithMessage($"Failed to attach payment method {e}");
    }

    // Update customer's default invoice payment method
    var customerOptions = new CustomerUpdateOptions
    {
        InvoiceSettings = new CustomerInvoiceSettingsOptions
        {
            DefaultPaymentMethod = paymentMethod.Id,
        },
    };
    var customerService = new CustomerService();
    try
    {
        customerService.Update(req.Customer, customerOptions);
    }
    catch (StripeException e)
    {
        return this.FailWithMessage($"Failed to attach payment method {e}");
    }

    // Create subscription
    var subscriptionOptions = new SubscriptionCreateOptions
    {
        Customer = req.Customer,
        Items = new List<SubscriptionItemOptions>
        {
            new SubscriptionItemOptions
            {
                Price = Environment.GetEnvironmentVariable(req.Price),
                Quantity = req.Quantity,
            },
        },
    };
    subscriptionOptions.AddExpand("latest_invoice.payment_intent");
    var subscriptionService = new SubscriptionService();
    try
    {
        return subscriptionService.Create(subscriptionOptions);
    }
    catch (StripeException e)
    {
        return this.FailWithMessage($"Failed to attach payment method: {e}");
    }
}
