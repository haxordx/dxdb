// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
Stripe.apiKey = "sk_test_4eC39HqLyjWDarjtT1zdp7dc";

post(
  "/update-subscription",
  (request, response) -> {
    response.type("application/json");
    // Set the default payment method on the customer
    UpdatePostBody postBody = gson.fromJson(
      request.body(),
      UpdatePostBody.class
    );

    Subscription subscription = Subscription.retrieve(
      postBody.getSubscriptionId()
    );
    String newPrice = dotenv.get(postBody.getNewPriceId().toUpperCase());
    Long quantity = postBody.getQuantity();
    String currentPrice = subscription
      .getItems()
      .getData()
      .get(0)
      .getPrice()
      .getId();

    SubscriptionUpdateParams.Builder updateParamsBuilder = new SubscriptionUpdateParams.Builder();

    if (currentPrice.equals(newPrice)) {
      updateParamsBuilder.addItem(
        SubscriptionUpdateParams
          .Item.builder()
          .setId(subscription.getItems().getData().get(0).getId())
          .setQuantity(quantity)
          .build()
      );
    } else {
      updateParamsBuilder.addItem(
        SubscriptionUpdateParams
          .Item.builder()
          .setId(subscription.getItems().getData().get(0).getId())
          .setDeleted(true)
          .build()
      );

      updateParamsBuilder.addItem(
        SubscriptionUpdateParams
          .Item.builder()
          .setPrice(newPrice)
          .setQuantity(quantity)
          .build()
      );
    }

    subscription =
      subscription.update(
        updateParamsBuilder
          .addAllExpand(Arrays.asList("plan.product"))
          .build()
      );

    String planName = subscription.getPlan().getProductObject().getName();
    Invoice invoice = Invoice.create(
      InvoiceCreateParams
        .builder()
        .setCustomer(subscription.getCustomer())
        .setSubscription(subscription.getId())
        .setDescription(
          "Change to " +
          quantity.toString() +
          " seat(s) on the the " +
          planName +
          " plan"
        )
        .build()
    );

    invoice = invoice.pay();

    return subscription.toJson();
  }
);
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
Stripe.apiKey = "sk_test_4eC39HqLyjWDarjtT1zdp7dc";

post(
  "/update-subscription",
  (request, response) -> {
    response.type("application/json");
    // Set the default payment method on the customer
    UpdatePostBody postBody = gson.fromJson(
      request.body(),
      UpdatePostBody.class
    );

    Subscription subscription = Subscription.retrieve(
      postBody.getSubscriptionId()
    );
    String newPrice = dotenv.get(postBody.getNewPriceId().toUpperCase());
    Long quantity = postBody.getQuantity();
    String currentPrice = subscription
      .getItems()
      .getData()
      .get(0)
      .getPrice()
      .getId();

    SubscriptionUpdateParams.Builder updateParamsBuilder = new SubscriptionUpdateParams.Builder();

    if (currentPrice.equals(newPrice)) {
      updateParamsBuilder.addItem(
        SubscriptionUpdateParams
          .Item.builder()
          .setId(subscription.getItems().getData().get(0).getId())
          .setQuantity(quantity)
          .build()
      );
    } else {
      updateParamsBuilder.addItem(
        SubscriptionUpdateParams
          .Item.builder()
          .setId(subscription.getItems().getData().get(0).getId())
          .setDeleted(true)
          .build()
      );

      updateParamsBuilder.addItem(
        SubscriptionUpdateParams
          .Item.builder()
          .setPrice(newPrice)
          .setQuantity(quantity)
          .build()
      );
    }

    subscription =
      subscription.update(
        updateParamsBuilder
          .addAllExpand(Arrays.asList("plan.product"))
          .build()
      );

    String planName = subscription.getPlan().getProductObject().getName();
    Invoice invoice = Invoice.create(
      InvoiceCreateParams
        .builder()
        .setCustomer(subscription.getCustomer())
        .setSubscription(subscription.getId())
        .setDescription(
          "Change to " +
          quantity.toString() +
          " seat(s) on the the " +
          planName +
          " plan"
        )
        .build()
    );

    invoice = invoice.pay();

    return subscription.toJson();
  }
);
