# Set your secret key. Remember to switch to your live secret key in production!
# See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.api_key = 'sk_test_4eC39HqLyjWDarjtT1zdp7dc'

# This code can be run on an interval (e.g., every 24 hours) for each active
# metered subscription.

# You need to write some of your own business logic before creating the
# usage record. Pull a record of a customer from your database
# and extract the customer's Stripe Subscription Item ID and usage
# for the day. If you aren't storing subscription item IDs,
# you can retrieve the subscription and check for subscription items
# https://stripe.com/docs/api/subscriptions/object#subscription_object-items.

subscription_item_id = '{{SUBSCRIPTION_ITEM_ID}}'

# The usage number you've been keeping track of in your database for
# the last 24 hours.
usage_quantity = 100

timestamp = int(time.time())

# The idempotency key allows you to retry this usage record call if it fails.
idempotency_key = uuid.uuid4()

try:
  stripe.SubscriptionItem.create_usage_record(
   subscription_item_id,
    quantity=usage_quantity,
    timestamp=timestamp,
    action='set',
    idempotency_key=idempotency_key
  )
  pass
except stripe.error.StripeError as e:
  print('Usage report failed for item ID %s with idempotency key %s: %s' %
  (subscription_item_id, idempotency_key, e.error.message))
  pass
# Set your secret key. Remember to switch to your live secret key in production!
# See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.api_key = 'sk_test_4eC39HqLyjWDarjtT1zdp7dc'

# This code can be run on an interval (e.g., every 24 hours) for each active
# metered subscription.

# You need to write some of your own business logic before creating the
# usage record. Pull a record of a customer from your database
# and extract the customer's Stripe Subscription Item ID and usage
# for the day. If you aren't storing subscription item IDs,
# you can retrieve the subscription and check for subscription items
# https://stripe.com/docs/api/subscriptions/object#subscription_object-items.

subscription_item_id = '{{SUBSCRIPTION_ITEM_ID}}'

# The usage number you've been keeping track of in your database for
# the last 24 hours.
usage_quantity = 100

timestamp = int(time.time())

# The idempotency key allows you to retry this usage record call if it fails.
idempotency_key = uuid.uuid4()

try:
  stripe.SubscriptionItem.create_usage_record(
   subscription_item_id,
    quantity=usage_quantity,
    timestamp=timestamp,
    action='set',
    idempotency_key=idempotency_key
  )
  pass
except stripe.error.StripeError as e:
  print('Usage report failed for item ID %s with idempotency key %s: %s' %
  (subscription_item_id, idempotency_key, e.error.message))
  pass
