// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
\Stripe\Stripe::setApiKey('sk_test_4eC39HqLyjWDarjtT1zdp7dc');

$app->post('/retry-invoice', function (Request $request, Response $response, array $args) {
  $body = json_decode($request->getBody());
  $stripe = $this->stripe;

  try {
    $payment_method = $stripe->paymentMethods->retrieve(
      $body->paymentMethodId
    );
    $payment_method->attach([
      'customer' => $body->customerId,
    ]);
  } catch (Exception $e) {
    return $response->withJson($e->jsonBody);
  }


  // Set the default payment method on the customer
  $stripe->customers->update($body->customerId, [
    'invoice_settings' => [
      'default_payment_method' => $body->paymentMethodId
    ]
  ]);

  $invoice = $stripe->invoices->retrieve($body->invoiceId, [
    'expand' => ['payment_intent']
  ]);

  return $response->withJson($invoice);
});
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
\Stripe\Stripe::setApiKey('sk_test_4eC39HqLyjWDarjtT1zdp7dc');

$app->post('/retry-invoice', function (Request $request, Response $response, array $args) {
  $body = json_decode($request->getBody());
  $stripe = $this->stripe;

  try {
    $payment_method = $stripe->paymentMethods->retrieve(
      $body->paymentMethodId
    );
    $payment_method->attach([
      'customer' => $body->customerId,
    ]);
  } catch (Exception $e) {
    return $response->withJson($e->jsonBody);
  }


  // Set the default payment method on the customer
  $stripe->customers->update($body->customerId, [
    'invoice_settings' => [
      'default_payment_method' => $body->paymentMethodId
    ]
  ]);

  $invoice = $stripe->invoices->retrieve($body->invoiceId, [
    'expand' => ['payment_intent']
  ]);

  return $response->withJson($invoice);
});
