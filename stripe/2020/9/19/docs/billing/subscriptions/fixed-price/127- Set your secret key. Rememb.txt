// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
Stripe.apiKey = "sk_test_4eC39HqLyjWDarjtT1zdp7dc";

post(
  "/retrieve-upcoming-invoice",
  (request, response) -> {
    response.type("application/json");
    UpcomingInvoicePostBody postBody = gson.fromJson(
      request.body(),
      UpcomingInvoicePostBody.class
    );

    Subscription subscription = Subscription.retrieve(
      postBody.getSubscriptionId()
    );

    InvoiceUpcomingParams invoiceParams = InvoiceUpcomingParams
      .builder()
      .setCustomer(postBody.getCustomerId())
      .setSubscription(postBody.getSubscriptionId())
      .addSubscriptionItem(
        InvoiceUpcomingParams
          .SubscriptionItem.builder()
          .setId(subscription.getItems().getData().get(0).getId())
          .setDeleted(true)
          .build()
      )
      .addSubscriptionItem(
        InvoiceUpcomingParams
          .SubscriptionItem.builder()
          .setPrice(dotenv.get(postBody.getNewPriceId().toUpperCase()))
          .build()
      )
      .build();

    Invoice invoice = Invoice.upcoming(invoiceParams);

    return invoice.toJson();
  }
);
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
Stripe.apiKey = "sk_test_4eC39HqLyjWDarjtT1zdp7dc";

post(
  "/retrieve-upcoming-invoice",
  (request, response) -> {
    response.type("application/json");
    UpcomingInvoicePostBody postBody = gson.fromJson(
      request.body(),
      UpcomingInvoicePostBody.class
    );

    Subscription subscription = Subscription.retrieve(
      postBody.getSubscriptionId()
    );

    InvoiceUpcomingParams invoiceParams = InvoiceUpcomingParams
      .builder()
      .setCustomer(postBody.getCustomerId())
      .setSubscription(postBody.getSubscriptionId())
      .addSubscriptionItem(
        InvoiceUpcomingParams
          .SubscriptionItem.builder()
          .setId(subscription.getItems().getData().get(0).getId())
          .setDeleted(true)
          .build()
      )
      .addSubscriptionItem(
        InvoiceUpcomingParams
          .SubscriptionItem.builder()
          .setPrice(dotenv.get(postBody.getNewPriceId().toUpperCase()))
          .build()
      )
      .build();

    Invoice invoice = Invoice.upcoming(invoiceParams);

    return invoice.toJson();
  }
);
