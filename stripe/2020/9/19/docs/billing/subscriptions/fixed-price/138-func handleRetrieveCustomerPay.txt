func handleRetrieveCustomerPaymentMethod(w http.ResponseWriter, r *http.Request) {
  if r.Method != "POST" {
    http.Error(w, http.StatusText(http.StatusMethodNotAllowed), http.StatusMethodNotAllowed)
    return
  }
  var req struct {
    PaymentMethodID string `json:"paymentMethodId"`
  }
  if err := json.NewDecoder(r.Body).Decode(&req); err != nil {
    http.Error(w, err.Error(), http.StatusInternalServerError)
    log.Printf("json.NewDecoder.Decode: %v", err)
    return
  }

  pm, err := paymentmethod.Get(req.PaymentMethodID, nil)
  if err != nil {
    http.Error(w, err.Error(), http.StatusInternalServerError)
    log.Printf("paymentmethod.Get: %v", err)
    return
  }

  writeJSON(w, pm)
}
func handleRetrieveCustomerPaymentMethod(w http.ResponseWriter, r *http.Request) {
  if r.Method != "POST" {
    http.Error(w, http.StatusText(http.StatusMethodNotAllowed), http.StatusMethodNotAllowed)
    return
  }
  var req struct {
    PaymentMethodID string `json:"paymentMethodId"`
  }
  if err := json.NewDecoder(r.Body).Decode(&req); err != nil {
    http.Error(w, err.Error(), http.StatusInternalServerError)
    log.Printf("json.NewDecoder.Decode: %v", err)
    return
  }

  pm, err := paymentmethod.Get(req.PaymentMethodID, nil)
  if err != nil {
    http.Error(w, err.Error(), http.StatusInternalServerError)
    log.Printf("paymentmethod.Get: %v", err)
    return
  }

  writeJSON(w, pm)
}
