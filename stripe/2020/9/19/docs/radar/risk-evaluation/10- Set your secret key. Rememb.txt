// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.Key = "sk_test_4eC39HqLyjWDarjtT1zdp7dc"

// If you haven't refunded the charge, you can do so and let Stripe
// know it was fraudulent in one step.
params := &stripe.RefundParams{
  Charge: stripe.String("{{CHARGE_ID}}"),
  Reason: stripe.String(string(stripe.RefundReasonFraudulent)),
}
r, _ := refund.New(params)

// If you already refunded the charge (without specifying the
// 'fraudulent' reason), you can still let us know it was fraudulent.
params := &stripe.ChargeParams{
  FraudDetails: &stripe.FraudDetailsParams{
    UserReport: stripe.String(string(stripe.ChargeFraudUserReportFraudulent)),
  },
}
c, _ := charge.Update("{{CHARGE_ID}}", params)
// Set your secret key. Remember to switch to your live secret key in production!
// See your keys here: https://dashboard.stripe.com/account/apikeys
stripe.Key = "sk_test_4eC39HqLyjWDarjtT1zdp7dc"

// If you haven't refunded the charge, you can do so and let Stripe
// know it was fraudulent in one step.
params := &stripe.RefundParams{
  Charge: stripe.String("{{CHARGE_ID}}"),
  Reason: stripe.String(string(stripe.RefundReasonFraudulent)),
}
r, _ := refund.New(params)

// If you already refunded the charge (without specifying the
// 'fraudulent' reason), you can still let us know it was fraudulent.
params := &stripe.ChargeParams{
  FraudDetails: &stripe.FraudDetailsParams{
    UserReport: stripe.String(string(stripe.ChargeFraudUserReportFraudulent)),
  },
}
c, _ := charge.Update("{{CHARGE_ID}}", params)
