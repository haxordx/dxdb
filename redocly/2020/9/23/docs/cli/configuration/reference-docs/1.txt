referenceDocs:
# Theme options below designated with `#CE` are supported by Redoc Community Edition (CE).

  # Control style, color, font, sizes, and spacing.

  theme:
    spacing:
      unit: 5 # CE  # main spacing unit used in autocomputed theme values later
      sectionHorizontal: 40 # CE  # Horizontal section padding. COMPUTED: spacing.unit * 8
      sectionVertical: 40 # CE  # Horizontal section padding. COMPUTED: spacing.unit * 8
    breakpoints: # CE  # breakpoints for switching three/two and mobile view layouts
      small: '50rem'
      medium: '85rem'
      large: '105rem'
    colors:
      tonalOffset: 0.3 # CE  # default tonal offset used in computations
      primary:
        main: '#32329f' # default primary color (used for headings, links, etc)
        # variations of primary color (NOTE: these currently computed variations are reserved for future use)
        light: # COMPUTED: lighten(colors.tonalOffset colors.primary.main)
        dark: # COMPUTED: darken(colors.tonalOffset colors.primary.main)
        contrastText: # COMPUTED: readableColor(colors.primary.main)
      success:
        main: '#00aa13' # default success color, not used directly
        light: # COMPUTED: lighten(colors.tonalOffset colors.success.main) - background
        dark: # COMPUTED: darken(colors.tonalOffset colors.success.main)
        contrastText: # COMPUTED: readableColor(colors.success.main)
      warning: # default warning color, used for recursive label
        main: '#d4ad03'
        light: # COMPUTED: lighten(colors.tonalOffset colors.warning.main)
        dark:  # COMPUTED: darken(colors.tonalOffset colors.warning.main)
        contrastText: '#ffffff'
      error: # default error color, not used directly
        main: '#e53935'
        light: # COMPUTED: lighten(colors.tonalOffset colors.error.main)
        dark: # COMPUTED: darken(colors.tonalOffset colors.error.main)
        contrastText: # COMPUTED: readableColor(colors.error.main)
      text:
        primary: '#333333' # Primary text color
        secondary: # COMPUTED: lighten(colors.tonalOffset colors.text.primary) - lighter text color
      border:
        dark: 'rgba(0, 0, 0, 0.1)' # endpoints borders, security requirements borders
        light: '#ffffff' # looks like not used
      responses: # responses colors
        success:
          color: # COMPUTED: colors.success.main
          backgroundColor: # COMPUTED: transparentize(0.9 colors.success.main)
        error:
          color: # COMPUTED: colors.error.main
          backgroundColor: # COMPUTED: transparentize(0.9 colors.error.main)
        redirect:
          color: '#ffa500'
          backgroundColor: # COMPUTED: transparentize(0.9 colors.responses.redirect.color)
        info:
          color: '#87ceeb'
          backgroundColor: # COMPUTED: transparentize(0.9 colors.responses.info.color)
      http: # http badges in left nav and endpoint info colors
        get: '#6bbd5b'
        post: '#248fb2'
        put: '#9b708b'
        options: '#d3ca12'
        patch: '#e09d43'
        delete: '#e27a7a'
        basic: '#999'
        link: '#31bbb6'
        head: '#c167e4'
    schema:
      linesColor: # COMPUTED: lighten(theme.colors.tonalOffset, desaturate(theme.colors.tonalOffset, theme.colors.primary.main))
                  # Colors of level lines in schema view
      defaultDetailsWidth: '75%' # Default vidth of details part of field
      typeNameColor: # COMPUTED: theme.colors.text.secondary
      typeTitleColor: # COMPUTED: theme.schema.typeNameColor
      requireLabelColor: # COMPUTED: theme.colors.error.main
      labelsTextSize: '0.9em'
      nestingSpacing: '1em' # padding between nesting schema
      nestedBackground: '#fafafa' # background of nested schema
      arrow: # schema arrow styling
        size: '1.1em'
        color: # COMPUTED: theme.colors.text.secondary

      # !! Redocly API Reference Only !!
      contstrains:
        # typography settings for constraints (< 1 char, [1, 100), nullable)
        # see headings below for possible settings
      examples:
        # typography settings for example values
        # see headings below for possible settings
    typography:
      fontSize: '14px' # CE
      lineHeight: '1.5em' # CE
      fontWeightRegular: '400' # CE
      fontWeightBold: '600' # CE
      fontWeightLight: '300' # CE
      fontFamily: 'Roboto, sans-serif' # CE
      smoothing: 'antialiased' # CE
      optimizeSpeed: true # CE
      headings:
        fontFamily: 'Montserrat, sans-serif' # CE
        fontWeight: '400' # CE
        lineHeight: '1.6em' # CE
      code: # inline code styling
        fontSize: '13px' # CE
        fontFamily: 'Courier, monospace' # CE
        lineHeight: # COMPUTED: typography.lineHeight # CE
        fontWeight: # COMPUTED: typography.fontWeightRegular # CE
        color: '#e53935' # CE
        backgroundColor: 'rgba(38, 50, 56, 0.05)' # CE
        wrap: false # whether to break word for inline blocks (otherwise they can overflow) # CE
      links:
        color: # COMPUTED: colors.primary.main # CE
        visited: # COMPUTED: typography.links.color # CE
        hover: # COMPUTED: lighten(0.2 typography.links.color) # CE

      # !! Redocly API Reference Only !!
      heading1: # typography settings only for heading 1 styles
        fontSize: # not set by default
        fontWeight: # not set by default
        fontFamily: # not set by default
        lineHeight: # not set by default
        color: # not set by default
        transform: # not set by default
      heading2: # typography settings only for heading 2 styles
        # same as for heading1
      heading3: # typography settings only for heading 3 styles
        # same as for other headings
      rightPanelHeading: # typography settings only for heading styles in right panel
        # same as for other headings
      fieldName: # typography settings for field names in schemas and parameters
        # same as for headings
      tokens: # configure colors of syntax highlighting different tokens
        boolean:
          color: firebrick
        # Available tokens(usually you don't need to ovveride all of them, just check which are used in actual html):
        # doctype, cdata, punctuation, property, tag, number, boolean, constant, symbol, selector,
        # attr-name, string, char, builtin, inserted, operator, entity, url, variable, atrule, attr-value,
        # keyword, regex, important, important, bold, italic, entity, deleted

        # also you can mix them with dot which will work only if the piece of text has both tokens:
        "property.string":
          color: green

    menu:
      width: '260px' # CE
      backgroundColor: '#fafafa' # CE
      textColor: '#333333' # CE
      activeTextColor: # COMPUTED: theme.menu.textColor (if set by user) or theme.colors.primary.main # CE
      groupItems: # Group headings # CE
        textTransform: 'uppercase' # CE
      level1Items: # Level 1 items like tags or section 1st level items # CE
        textTransform: 'none' # CE
      arrow: # menu arrow # CE
        size: '1.5em' # CE
        color: # COMPUTED: theme.menu.textColor # CE

      # !! Redocly API Reference Only !!
      breakPath: false # for sideNavStyle: summary-first, break path into multiple lines if it does not fit
    logo:
      maxHeight: # COMPUTED: menu.width # CE
      maxWidth: # COMPUTED: menu.width # CE
      gutter: '2px' # logo image padding # CE
    rightPanel:
      backgroundColor: '#263238' # CE
      width: '40%' # CE
      textColor: '#ffffff' # CE
    codeSample: # right panel code samples
      backgroundColor: # COMPUTED: => darken(0.1 rightPanel.backgroundColor) # CE

    ## Redocly API Reference advanced theming
    codeSample:
      borderRadius: 0 # border radius of MD code samples
    overrides:
      DownloadButton:
        custom: 'color: red;' # custom CSS to apply to Download Button
      NextSectionButton:
        custom: 'color: red;' # custom CSS to apply to Next Section Button