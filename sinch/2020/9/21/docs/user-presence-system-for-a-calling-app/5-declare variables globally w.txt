//declare variables globally within the Activity
private ArrayList users;
private JSONArray hereNowUuids;

//in onResume
super.onResume();

//setup to add & remove users from the ListView
users = new ArrayList<String>();
final ListView usersListView = (ListView)findViewById(R.id.usersListView);
final ArrayAdapter usersArrayAdapter = new ArrayAdapter<String>(getApplicationContext(), R.layout.user_list_item, users);
usersListView.setAdapter(usersArrayAdapter);

//first, figure out who is here now
pubnub.hereNow("calling_channel", new Callback() {
    public void successCallback(String channel, Object response) {
        try {
            JSONObject hereNowResponse = new JSONObject(response.toString());
            hereNowUuids = new JSONArray(hereNowResponse.get("uuids").toString());
        } catch (JSONException e) {
            Log.d("JSONException",e.toString());
        }

        //add everyone but yourself to the ListView
        String currentUuid;
        for (int i=0;i<hereNowUuids.length();i++){
            try {
                currentUuid = hereNowUuids.get(i).toString();
                if (!currentUuid.equals(pubnub.getUUID())) {
                    users.add(currentUuid);
                    MainActivity.this.runOnUiThread(new Runnable() {
                        @Override
                        public void run() {
                            usersArrayAdapter.notifyDataSetChanged();
                        }
                    });
                }
            } catch (JSONException e) {
                Log.d("JSONException",e.toString());
            }
        }
    }

    public void errorCallback(String channel, PubnubError error) {
        Log.d("PubnubError", error.toString());
    }
});

//subscribe to calling_channel
//empty callback for the sake of simplicity in this tutorial
try {
    pubnub.subscribe("calling_channel", new Callback() {
    });
} catch (PubnubException e) {
    Log.d("PubnubException",e.toString());
}

//start listening for users to join & leave the channel
try {
    pubnub.presence("calling_channel", new Callback() {

        @Override
        public void successCallback(String channel, Object message) {
            try {
                JSONObject jsonMessage = new JSONObject(message.toString());
                String action = jsonMessage.get("action").toString();
                String uuid = jsonMessage.get("uuid").toString();

                if (!uuid.equals(pubnub.getUUID())) {
                    //if a user subscribes to  calling_channel, add them to the list
                    if (action.equals("join")) {
                        users.add(uuid);
                        MainActivity.this.runOnUiThread(new Runnable() {
                            @Override
                            public void run() {
                                usersArrayAdapter.notifyDataSetChanged();
                            }
                        });
                    //if a user unsubscribes from calling_channel, remove them from the list
                    } else if (action.equals("leave")) {
                        for (int i = 0; i < users.size(); i++) {
                            if (users.get(i).equals(uuid)) {
                                users.remove(i);
                                MainActivity.this.runOnUiThread(new Runnable() {
                                    @Override
                                    public void run() {
                                        usersArrayAdapter.notifyDataSetChanged();
                                    }
                                });
                            }
                        }
                    }
                }
            } catch (JSONException e) {
                Log.d("JSONException", e.toString());
            }
        }
    });
} catch (PubnubException e) {
    Log.d("PubnubException",e.toString());
}
