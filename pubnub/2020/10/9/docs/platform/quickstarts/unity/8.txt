pubnub.SubscribeCallback += SubscribeCallbackHandler;

//Handler
void SubscribeCallbackHandler(object sender, EventArgs e) {
    SubscribeEventEventArgs mea = e as SubscribeEventEventArgs;
    if (mea.PresenceEventResult != null) {
        Debug.Log("SubscribeCallback in presence" + mea.PresenceEventResult.Channel + mea.PresenceEventResult.Occupancy + mea.PresenceEventResult.Event);
    }
    // Added in the previous steps
    if (mea.Status != null) {
        switch (mea.Status.Category) {
            case PNStatusCategory.PNUnexpectedDisconnectCategory:
            case PNStatusCategory.PNTimeoutCategory:
            break;
        }
    }
    // Added in the previous steps
    if (mea.MessageResult != null) {
        // Format data into a readable format
        JSONInformation chatmessage = JsonUtility.FromJson<JSONInformation>(message.MessageResult.Payload.ToString());

        // Call the function to display the message in plain text
        CreateChat(chatmessage);

        // When a new chat is created, remove the first chat and transform all the messages on the page up
        SyncChat();
     }
}
show all 28 lineshide 13 linesCopy