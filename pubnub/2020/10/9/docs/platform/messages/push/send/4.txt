public class MyFirebaseMessagingService extends FirebaseMessagingService {  // you may lots of other code here  /**   * Called if InstanceID token is updated. This may occur if the security of   * the previous token had been compromised. Note that this is called when the InstanceID token   * is initially generated so this is where you would retrieve the token.   */  @Override  public void onNewToken(String token) {/*STEP 2: receive the new push token*/String oldToken = MainActivity.preferences.getString("DeviceToken","");Log.d(TAG, "Refreshed token: " + token);Log.d(TAG, "Previous token: " + oldToken);/*STEP 3: is the new push token different than the old push token?*/if (!token.isEqual(oldToken)) {  // token has changed to store  MainActivity.sharedPrefs.edit().putString("DeviceToken", token).commit();  // unregister the oldToken from push channels on PubNub  pubnub.removeAllPushNotificationsFromDeviceWithPushToken()  .deviceId(oldToken).pushType(PNPushType.FCM)  .async(new PNCallback<PNPushRemoveAllChannelsResult>() {    @Override    public void onResponse(PNPushRemoveAllChannelsResult result, PNStatus status) {    }  });/*STEP 4: Associate push notifications on channels with PubNub*/pubnub.addPushNotificationsOnChannels()  .pushType(PNPushType.FCM)  .channels(Arrays.asList("chats.room1", "chats.room1", "alerts.system"))  .deviceId(deviceToken)  .async(new PNCallback<PNPushAddChannelResult>() {    @Override    public void onResponse(PNPushAddChannelResult result, PNStatus status) {      // handle response    }  });}}@Overridepublic void onMessageReceived(RemoteMessage remoteMessage) {/*STEP 5: receive push notifications from FCM*/  /*    There are two types of messages data messages and notification messages.    Data messages are handled here in onMessageReceived whether the app is in    the foreground or background. Data messages are the type traditionally    used with GCM. Notification messages are only received here in    onMessageReceived when the app is in the foreground. When the app is in    the background an automatically generated notification is displayed.    When the user taps on the notification they're returned to the app. Messages    containing both notification and data payloads are treated as notification    messages. The Firebase console always sends notification messages.    For more refer to: https://firebase.google.com/docs/cloud-messaging/concept-options    */}// you probably have lots more code here}show all 70 lineshide 55 linesCopy