export default (request) => {
    const xhr = require('xhr');
    const query = require('codec/query_string');

    // keys
    const apiKey = 'API_KEY';

    // API HTTP URL
    const apiUrl = 'http://api.giphy.com/v1/gifs/search';

    // Regular expression to find words for which we need to add gif urls
    const regex = /\/gif\s\(([^.?]*)\)|\/gif\s\w+/g;

    // check that text is there to analyze
    let textToAnalyze = request.message.text;
    if (!textToAnalyze || textToAnalyze.length === 0) {
        return request.ok();
    }

    // Since this is a before publish event handler, we can modify the
    // message and subscribers will receive the modified version.
    const matches = textToAnalyze.match(regex) || [];
    const rets = [];

    matches.forEach((match) => {
        const queryParams = {
            api_key: apiKey,
            limit: 1,
            rating: 'g',
            q: match.split('/gif')[1]
        };

        let url = apiUrl + '?' + query.stringify(queryParams);

        const a = xhr.fetch(url)
            .then((r) => {
                // add GIF URLs to the message
                const body = JSON.parse(r.body || r);
                return body.data[0].images.fixed_height.url;
            })
            .catch((e) => {
                console.error(e);
            });
  
        rets.push(a);
    });

    return Promise.all(rets).then((values) => {
        request.message.gifs = values;
        request.message.text = textToAnalyze.replace(/\/gif\s\(([^.?]*)\)/g, '$1').replace(/\/gif\s/g, '');
        return request.ok();
    });
};
show all 53 lineshide 38 linesCopy