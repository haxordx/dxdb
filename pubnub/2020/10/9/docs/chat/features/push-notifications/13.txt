PushPayloadHelper pushPayloadHelper = new PushPayloadHelper();// Set up FCM parameters (FCMPayload)PushPayloadHelper.FCMPayload fcmPayload = new PushPayloadHelper.FCMPayload();PushPayloadHelper.FCMPayload.Notification fcmNotification =  new PushPayloadHelper.FCMPayload.Notification()    .setTitle("Chat invite")    .setBody("John invited you to chat");fcmPayload.setNotification(fcmNotification);// Set FCM payloadpushPayloadHelper.setFcmPayload(fcmPayload);// Create the APS alert title/bodyJsonObject apsAlertData = new JsonObject();apsAlertData.addProperty("title", "Chat invite");apsAlertData.addProperty("body", "John invited you to chat");// Define APSPushPayloadHelper.APNSPayload.APS aps = new PushPayloadHelper.APNSPayload.APS()  .setAlert(apsAlertData)  .setSound("default");PushPayloadHelper.APNSPayload apnsPayload = new PushPayloadHelper.APNSPayload()  .setAps(aps);// Set APNs2 Configurations as a listapnsPayload.setApns2Configurations(Arrays.asList(  new PushPayloadHelper.APNSPayload.APNS2Configuration()    .setVersion("v2")    .setTargets(Arrays.asList(      new PushPayloadHelper.APNSPayload.APNS2Configuration.Target()        .setEnvironment(PNPushEnvironment.PRODUCTION)        .setTopic("com.example.chat")    ))));// Set APNs payloadpushPayloadHelper.setApnsPayload(apnsPayload);// Common payload for realtime PubNub subscribeMap<String, Object> commonPayload = new HashMap<>();commonPayload.put("text", "John invited you to chat");commonPayload.put("room", "chats.room1");pushPayloadHelper.setCommonPayload(commonPayload);// Build the payload// Returns a Map which can be used directly as the message for the pubnub.publish() methodMap<String, Object> payload = pushPayloadHelper.build();System.out.println(payload);// Publish on channelpubnub.publish()  .channel("inbox.user123")  .message(payload)  .async(new PNCallback<PNPublishResult>() {    @Override    public void onResponse(PNPublishResult result, PNStatus status) {        if (!status.isError()) {            System.out.println("pub timetoken: " + result.getTimetoken());        }        System.out.println("pub status code: " + status.getStatusCode());    }  });show all 65 lineshide 50 linesCopy